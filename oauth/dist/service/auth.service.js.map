{"version":3,"sources":["../../src/service/auth.service.ts"],"sourcesContent":["import { Injectable } from '@nestjs/common';\r\nimport { PrismaService } from './prisma.service';\r\nimport { JwtService } from '@nestjs/jwt';\r\nimport { InjectRedis } from '@nestjs-modules/ioredis';\r\nimport IoRedis from 'ioredis';\r\nimport axios from 'axios';\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n  constructor(\r\n    private readonly prisma: PrismaService,\r\n    private readonly jwtService: JwtService,\r\n    @InjectRedis() private readonly redis: IoRedis,\r\n  ) {}\r\n  async signIn(loginParam: any) {\r\n    const { email } = loginParam;\r\n\r\n    const loginUser = await this.prisma.user.findUnique({\r\n      where: {\r\n        email,\r\n      },\r\n    });\r\n\r\n    if (!loginUser) {\r\n      const user = await this.prisma.user.create({\r\n        data: {\r\n          email,\r\n        },\r\n      });\r\n      return this.setJwtToken(user.id);\r\n    }\r\n    return this.setJwtToken(loginUser.id);\r\n  }\r\n\r\n  async oauthRedirect(code: string) {\r\n    try {\r\n      const tokenResponse = await axios({\r\n        method: 'post',\r\n        url: `https://gitee.com/oauth/token?grant_type=authorization_code&code=${code}&client_id=${process.env.CLIENT_ID}&client_secret=${process.env.CLIENT_SECRET}&redirect_uri=${process.env.REDIRECT_URL}`,\r\n        headers: {\r\n          accept: 'application/json',\r\n        },\r\n        data: {\r\n          client_secret: process.env.CLIENT_SECRET,\r\n        },\r\n      });\r\n      console.log(tokenResponse, 'data');\r\n      const accessToken = tokenResponse.data.access_token;\r\n      const result = await axios({\r\n        method: 'get',\r\n        url: `https://gitee.com/api/v5/user?access_token=${accessToken}`,\r\n        headers: {\r\n          accept: 'application/json',\r\n        },\r\n      });\r\n      const userInfo = result.data;\r\n      const userId = userInfo.id;\r\n      this.redis\r\n        .multi()\r\n        .set(`gid:${userId}`, accessToken)\r\n        .expire(`gid:${userId}`, 60 * 60 * 24 * 3)\r\n        .exec();\r\n\r\n      const user = await this.prisma.user.findUnique({\r\n        where: {\r\n          id: userId,\r\n        },\r\n      });\r\n      if (!user) {\r\n        await this.prisma.user.create({\r\n          data: {\r\n            id: userId,\r\n            email: userInfo?.email,\r\n            userName: userInfo?.login,\r\n            avatar: userInfo?.avatar_url,\r\n            nickName: userInfo?.name,\r\n          },\r\n        });\r\n      } else {\r\n        await this.prisma.user.update({\r\n          where: {\r\n            id: userId,\r\n          },\r\n          data: {\r\n            email: userInfo?.email,\r\n            userName: userInfo?.login,\r\n            avatar: userInfo?.avatar_url,\r\n            nickName: userInfo?.name,\r\n          },\r\n        });\r\n      }\r\n      return {\r\n        gid: userId,\r\n      };\r\n    } catch (error) {\r\n      console.log(error, 'error');\r\n    }\r\n  }\r\n\r\n  async getUserInfo(cookies: any) {\r\n    const { userId, gid } = cookies;\r\n    const user = await this.prisma.user.findUnique({\r\n      where: {\r\n        id: Number(userId) || Number(gid),\r\n      },\r\n    });\r\n    return {\r\n      user,\r\n    };\r\n  }\r\n\r\n  async setJwtToken(userId: number) {\r\n    const payload = { sub: userId };\r\n    const access_token = await this.jwtService.signAsync(payload, {\r\n      secret: process.env.ACCESS_TOKEN_SECRET,\r\n    });\r\n    this.redis\r\n      .multi()\r\n      .set(`userId:${userId}`, access_token)\r\n      .expire(`userId:${userId}`, 60 * 60 * 24 * 3)\r\n      .exec();\r\n\r\n    return {\r\n      userId: userId,\r\n    };\r\n  }\r\n}"],"names":["AuthService","signIn","loginParam","email","loginUser","prisma","user","findUnique","where","create","data","setJwtToken","id","oauthRedirect","code","tokenResponse","axios","method","url","process","env","CLIENT_ID","CLIENT_SECRET","REDIRECT_URL","headers","accept","client_secret","console","log","accessToken","access_token","result","userInfo","userId","redis","multi","set","expire","exec","userName","login","avatar","avatar_url","nickName","name","update","gid","error","getUserInfo","cookies","Number","payload","sub","jwtService","signAsync","secret","ACCESS_TOKEN_SECRET","constructor"],"mappings":"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"}
{"version":3,"sources":["../../src/service/auth.service.ts"],"sourcesContent":["import { Injectable } from '@nestjs/common';\r\nimport { PrismaService } from './prisma.service';\r\nimport { JwtService } from '@nestjs/jwt';\r\nimport { InjectRedis } from '@nestjs-modules/ioredis';\r\nimport IoRedis from 'ioredis';\r\nimport axios from 'axios';\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n  constructor(\r\n    private readonly prisma: PrismaService,\r\n    private readonly jwtService: JwtService,\r\n    @InjectRedis() private readonly redis: IoRedis,\r\n  ) {}\r\n  async signIn(loginParam: any) {\r\n    const { email } = loginParam;\r\n    const user = await this.prisma.user.create({\r\n      data: {\r\n        email,\r\n      },\r\n    });\r\n    const payload = { sub: user.id };\r\n    const access_token = await this.jwtService.signAsync(payload, {\r\n      secret: process.env.ACCESS_TOKEN_SECRET,\r\n    });\r\n    this.redis\r\n      .multi()\r\n      .set(`userId:${user.id}`, access_token)\r\n      .expire(`userId:${user.id}`, 60 * 60 * 24 * 3)\r\n      .exec();\r\n\r\n    return {\r\n      userId: user.id,\r\n    };\r\n  }\r\n\r\n  async oauthRedirect(code: string) {\r\n    try {\r\n      const tokenResponse = await axios({\r\n        method: 'post',\r\n        url: `https://gitee.com/oauth/token?grant_type=authorization_code&code=${code}&client_id=${process.env.CLIENT_ID}&client_secret=${process.env.CLIENT_SECRET}&redirect_uri=${process.env.REDIRECT_URL}`,\r\n        headers: {\r\n          accept: 'application/json',\r\n        },\r\n        data: {\r\n          client_secret: process.env.CLIENT_SECRET,\r\n        },\r\n      });\r\n      console.log(tokenResponse, 'data');\r\n      const accessToken = tokenResponse.data.access_token;\r\n      const result = await axios({\r\n        method: 'get',\r\n        url: `https://gitee.com/api/v5/user?access_token=${accessToken}`,\r\n        headers: {\r\n          accept: 'application/json',\r\n        },\r\n      });\r\n      const userInfo = result.data;\r\n      console.log(userInfo, 'userInfo');\r\n      const userId = userInfo.id;\r\n      this.redis\r\n        .multi()\r\n        .set(`gid:${userId}`, accessToken)\r\n        .expire(`gid:${userId}`, 60 * 60 * 24 * 3)\r\n        .exec();\r\n\r\n      await this.prisma.user.create({\r\n        data: {\r\n          id: userId,\r\n          email: userInfo?.email,\r\n          userName: userInfo?.login,\r\n          avatar: userInfo?.avatar_url,\r\n        },\r\n      });\r\n\r\n      return {\r\n        gid: userId,\r\n      };\r\n    } catch (error) {\r\n      console.log(error, 'error');\r\n    }\r\n  }\r\n\r\n  async getUserInfo(cookies: any) {\r\n    const { userId, gid } = cookies;\r\n    const user = await this.prisma.user.findUnique({\r\n      where: {\r\n        id: Number(userId) || Number(gid),\r\n      },\r\n    });\r\n    return {\r\n      user,\r\n    };\r\n  }\r\n}\r\n"],"names":["AuthService","signIn","loginParam","email","user","prisma","create","data","payload","sub","id","access_token","jwtService","signAsync","secret","process","env","ACCESS_TOKEN_SECRET","redis","multi","set","expire","exec","userId","oauthRedirect","code","tokenResponse","axios","method","url","CLIENT_ID","CLIENT_SECRET","REDIRECT_URL","headers","accept","client_secret","console","log","accessToken","result","userInfo","userName","login","avatar","avatar_url","gid","error","getUserInfo","cookies","findUnique","where","Number","constructor"],"mappings":";;;;+BAQaA;;;eAAAA;;;wBARc;+BACG;qBACH;yBACC;iEACR;8DACF;;;;;;;;;;;;;;;;;;;;AAGX,IAAA,AAAMA,cAAN,MAAMA;IAMX,MAAMC,OAAOC,UAAe,EAAE;QAC5B,MAAM,EAAEC,KAAK,EAAE,GAAGD;QAClB,MAAME,OAAO,MAAM,IAAI,CAACC,MAAM,CAACD,IAAI,CAACE,MAAM,CAAC;YACzCC,MAAM;gBACJJ;YACF;QACF;QACA,MAAMK,UAAU;YAAEC,KAAKL,KAAKM,EAAE;QAAC;QAC/B,MAAMC,eAAe,MAAM,IAAI,CAACC,UAAU,CAACC,SAAS,CAACL,SAAS;YAC5DM,QAAQC,QAAQC,GAAG,CAACC,mBAAmB;QACzC;QACA,IAAI,CAACC,KAAK,CACPC,KAAK,GACLC,GAAG,CAAC,CAAC,OAAO,EAAEhB,KAAKM,EAAE,EAAE,EAAEC,cACzBU,MAAM,CAAC,CAAC,OAAO,EAAEjB,KAAKM,EAAE,EAAE,EAAE,KAAK,KAAK,KAAK,GAC3CY,IAAI;QAEP,OAAO;YACLC,QAAQnB,KAAKM,EAAE;QACjB;IACF;IAEA,MAAMc,cAAcC,IAAY,EAAE;QAChC,IAAI;YACF,MAAMC,gBAAgB,MAAMC,IAAAA,cAAK,EAAC;gBAChCC,QAAQ;gBACRC,KAAK,CAAC,iEAAiE,EAAEJ,KAAK,WAAW,EAAEV,QAAQC,GAAG,CAACc,SAAS,CAAC,eAAe,EAAEf,QAAQC,GAAG,CAACe,aAAa,CAAC,cAAc,EAAEhB,QAAQC,GAAG,CAACgB,YAAY,EAAE;gBACtMC,SAAS;oBACPC,QAAQ;gBACV;gBACA3B,MAAM;oBACJ4B,eAAepB,QAAQC,GAAG,CAACe,aAAa;gBAC1C;YACF;YACAK,QAAQC,GAAG,CAACX,eAAe;YAC3B,MAAMY,cAAcZ,cAAcnB,IAAI,CAACI,YAAY;YACnD,MAAM4B,SAAS,MAAMZ,IAAAA,cAAK,EAAC;gBACzBC,QAAQ;gBACRC,KAAK,CAAC,2CAA2C,EAAES,aAAa;gBAChEL,SAAS;oBACPC,QAAQ;gBACV;YACF;YACA,MAAMM,WAAWD,OAAOhC,IAAI;YAC5B6B,QAAQC,GAAG,CAACG,UAAU;YACtB,MAAMjB,SAASiB,SAAS9B,EAAE;YAC1B,IAAI,CAACQ,KAAK,CACPC,KAAK,GACLC,GAAG,CAAC,CAAC,IAAI,EAAEG,QAAQ,EAAEe,aACrBjB,MAAM,CAAC,CAAC,IAAI,EAAEE,QAAQ,EAAE,KAAK,KAAK,KAAK,GACvCD,IAAI;YAEP,MAAM,IAAI,CAACjB,MAAM,CAACD,IAAI,CAACE,MAAM,CAAC;gBAC5BC,MAAM;oBACJG,IAAIa;oBACJpB,OAAOqC,UAAUrC;oBACjBsC,UAAUD,UAAUE;oBACpBC,QAAQH,UAAUI;gBACpB;YACF;YAEA,OAAO;gBACLC,KAAKtB;YACP;QACF,EAAE,OAAOuB,OAAO;YACdV,QAAQC,GAAG,CAACS,OAAO;QACrB;IACF;IAEA,MAAMC,YAAYC,OAAY,EAAE;QAC9B,MAAM,EAAEzB,MAAM,EAAEsB,GAAG,EAAE,GAAGG;QACxB,MAAM5C,OAAO,MAAM,IAAI,CAACC,MAAM,CAACD,IAAI,CAAC6C,UAAU,CAAC;YAC7CC,OAAO;gBACLxC,IAAIyC,OAAO5B,WAAW4B,OAAON;YAC/B;QACF;QACA,OAAO;YACLzC;QACF;IACF;IApFAgD,YACE,AAAiB/C,MAAqB,EACtC,AAAiBO,UAAsB,EACvC,AAAgCM,KAAc,CAC9C;aAHiBb,SAAAA;aACAO,aAAAA;aACeM,QAAAA;IAC/B;AAiFL"}
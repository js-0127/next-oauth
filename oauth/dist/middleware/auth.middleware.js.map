{"version":3,"sources":["../../src/middleware/auth.middleware.ts"],"sourcesContent":["import { InjectRedis } from '@nestjs-modules/ioredis';\r\nimport { Injectable, NestMiddleware } from '@nestjs/common';\r\nimport { JwtService } from '@nestjs/jwt';\r\nimport { Request, Response } from 'express';\r\nimport IoRedis from 'ioredis';\r\n@Injectable()\r\nexport class AuthMiddleware implements NestMiddleware {\r\n  constructor(\r\n    @InjectRedis() private readonly redis: IoRedis,\r\n    private readonly jwtService: JwtService,\r\n  ) {}\r\n  async use(req: Request, res: Response, next: () => void) {\r\n    const cookies = req.cookies;\r\n    const { userId = '' } = cookies;\r\n    const access_token = await this.redis.get(`userId:${userId}`);\r\n    console.log(access_token, 'access_token');\r\n\r\n    if (access_token) {\r\n      const new_access_token = await this.jwtService.signAsync(\r\n        { userId },\r\n        {\r\n          secret: process.env.ACCESS_TOKEN_SECRET,\r\n        },\r\n      );\r\n      this.redis\r\n        .multi()\r\n        .set(`userId:${userId}`, new_access_token)\r\n        .expire(`userId:${userId}`, 60 * 60 * 24 * 3)\r\n        .exec();\r\n\r\n      res.cookie('userId', userId, {\r\n        httpOnly: true,\r\n        maxAge: 1000 * 60 * 60 * 24 * 3,\r\n      });\r\n      next();\r\n    } else {\r\n      //这里会有跨域错误，不能直接重定向\r\n      res.setHeader('Access-Control-Allow-Credentials', 'true');\r\n      res.status(302).json({ redirectUrl: 'http://localhost:3000/login' });\r\n      return res.send();\r\n    }\r\n  }\r\n}\r\n"],"names":["AuthMiddleware","use","req","res","next","cookies","userId","access_token","redis","get","console","log","new_access_token","jwtService","signAsync","secret","process","env","ACCESS_TOKEN_SECRET","multi","set","expire","exec","cookie","httpOnly","maxAge","setHeader","status","json","redirectUrl","send","constructor"],"mappings":";;;;+BAMaA;;;eAAAA;;;yBANe;wBACe;qBAChB;iEAEP;;;;;;;;;;;;;;;;;;;;AAEb,IAAA,AAAMA,iBAAN,MAAMA;IAKX,MAAMC,IAAIC,GAAY,EAAEC,GAAa,EAAEC,IAAgB,EAAE;QACvD,MAAMC,UAAUH,IAAIG,OAAO;QAC3B,MAAM,EAAEC,SAAS,EAAE,EAAE,GAAGD;QACxB,MAAME,eAAe,MAAM,IAAI,CAACC,KAAK,CAACC,GAAG,CAAC,CAAC,OAAO,EAAEH,QAAQ;QAC5DI,QAAQC,GAAG,CAACJ,cAAc;QAE1B,IAAIA,cAAc;YAChB,MAAMK,mBAAmB,MAAM,IAAI,CAACC,UAAU,CAACC,SAAS,CACtD;gBAAER;YAAO,GACT;gBACES,QAAQC,QAAQC,GAAG,CAACC,mBAAmB;YACzC;YAEF,IAAI,CAACV,KAAK,CACPW,KAAK,GACLC,GAAG,CAAC,CAAC,OAAO,EAAEd,QAAQ,EAAEM,kBACxBS,MAAM,CAAC,CAAC,OAAO,EAAEf,QAAQ,EAAE,KAAK,KAAK,KAAK,GAC1CgB,IAAI;YAEPnB,IAAIoB,MAAM,CAAC,UAAUjB,QAAQ;gBAC3BkB,UAAU;gBACVC,QAAQ,OAAO,KAAK,KAAK,KAAK;YAChC;YACArB;QACF,OAAO;YACL,kBAAkB;YAClBD,IAAIuB,SAAS,CAAC,oCAAoC;YAClDvB,IAAIwB,MAAM,CAAC,KAAKC,IAAI,CAAC;gBAAEC,aAAa;YAA8B;YAClE,OAAO1B,IAAI2B,IAAI;QACjB;IACF;IAlCAC,YACE,AAAgCvB,KAAc,EAC9C,AAAiBK,UAAsB,CACvC;aAFgCL,QAAAA;aACfK,aAAAA;IAChB;AAgCL"}